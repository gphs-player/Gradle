// Top-level build file where you can add configuration options common to all sub-projects/modules.

apply from : './task.gradle'
println("START---------build.gradle---------START")

buildscript {
    //统一管理依赖版本
    ext.versions=[
            "gradle":"3.6.1",
            "v7":"28.0.0"
    ]
    ext.deps= [
            "android_gradle_plugin" : "com.android.tools.build:gradle:${versions.gradle}",
            "support_v7": "com.android.support:appcompat-v7:${versions.v7}"
    ]
    repositories {
        maven {
            url './repo'
        }

        google()
        jcenter()

    }
    dependencies {
//        classpath 'com.lh.plugin:lhPlugin:1.0.0'
//        classpath 'com.leo.plugin:customPlugin:1.0.0'
//        classpath 'com.leo.transform:TransformPlugin:1.0.2'
        classpath deps.android_gradle_plugin
    }
}

subprojects {
//    apply plugin: 'com.leo.plugin'
}

allprojects {
    repositories {
        google()
        jcenter()
        maven {
            url './repo'
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task hello {
    group "LeoTask"
    description "Custom task say hello"
    doLast {
        Fun.sayHello()
    }
}
task sayHello(type: com.leo.HelloTask)
println("START---------build.gradle---------START")
// hello 执行完毕后会自动触发   sayHello，或者说 sayHello终结了hello任务
hello.finalizedBy  sayHello


//gradle.buildFinished { buildResult ->
//    println "BUILD FINISHED"
//    println "build failure - " + buildResult.failure
//}


task fail {
    //
    doLast {
        throw new Exception("Build failed")
    }
}
allprojects {
//    beforeEvaluate {
//        if(project.file('grammars').isDirectory()) {
//            println "'grammars' found in ${project.name}"
//
//            task testGrammars << {
//                println "Running grammar tests in ${project.name}"
//            }
//        } else {
//            println "'grammars' not found in ${project.name}"
//        }
//    }
}
